{"mappings":"gfAAAA,EAAA,SAEA,IAAMC,EAAOC,SAASC,cAAc,SAehCC,GAdcF,SAASC,cAAc,UACtBD,SAASC,cAAc,kBACnBD,SAASC,cAAc,iBAC1BD,SAASC,cAAc,mBAWlBE,OAIzB,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,aAAY,WACNH,EACFF,EAAQ,eAENC,EAAK,a,GAERH,E,IAXPP,EAAKe,iBAAiB,SAAUV,GAehCA,EAAc,EAAG,MACdW,MAAK,SAAAC,G,OAAOC,QAAQC,IAAIF,E,IACxBG,OAAM,SAAAC,G,OAAOH,QAAQC,IAAIE,E,IAE5BH,QAAQC,IAAIhB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst btnSubmit = document.querySelector('button');\nconst delayInput = document.querySelector('[name=\"delay\"]');\nconst stepDelayInput = document.querySelector('[name=\"step\"]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\n\n//*****************==========================================================================\n//*\n//*  Напиши скрипт, який на момент сабміту форми викликає функцію createPromise(position, delay)\n//*  стільки разів, скільки ввели в поле amount.Під час кожного виклику передай їй\n//*  номер промісу(position), що створюється, і затримку, враховуючи першу затримку(delay),\n//*  введену користувачем, і крок(step).\n//*\n//*****************===========================================================================\n\nlet amount = amountInput.value;\n\nform.addEventListener('submit', createPromise);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setInterval(() => {\n      if (shouldResolve) {\n        resolve('✅ Fulfilled');\n      } else {\n        reject('❌ Rejected');\n      }\n    }, delay);\n  });\n}\n\ncreatePromise(2, 1500)\n  .then(res => console.log(res))\n  .catch(rej => console.log(rej));\n\nconsole.log(amount);\n\n// console.log('%c color:red', 'color:red; font-size:30px;');\n\n//*==========================================================================================\n//*\n//*   Доповни код функції createPromise таким чином, щоб вона повертала один проміс,\n//*  який виконується або відхиляється через delay часу.Значенням промісу повинен бути об'єкт,\n//*  в якому будуть властивості position і delay зі значеннями однойменних параметрів.\n//*  Використовуй початковий код функції для вибору того, що потрібно зробити з промісом\n//*  - виконати або відхилити.\n//*\n//*===========================================================================================\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n// Notiflix.Notify.failure('Qui timide rogat docet negare');\n// Notiflix.Notify.info('Cogito ergo sum');\n"],"names":["parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$amount","value","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setInterval","addEventListener","then","res","console","log","catch","rej"],"version":3,"file":"03-promises.3235e4f8.js.map"}