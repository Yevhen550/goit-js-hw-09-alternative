{"mappings":"oeAAAA,EAAA,SAEaC,SAASC,cAAc,SAClBD,SAASC,cAAc","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst btnSubmit = document.querySelector('button');\n\n//*****************==========================================================================\n//*\n//*  Напиши скрипт, який на момент сабміту форми викликає функцію createPromise(position, delay)\n//*  стільки разів, скільки ввели в поле amount.Під час кожного виклику передай їй\n//*  номер промісу(position), що створюється, і затримку, враховуючи першу затримку(delay),\n//*  введену користувачем, і крок(step).\n//*\n//*****************===========================================================================\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n//*==========================================================================================\n//*\n//*   Доповни код функції createPromise таким чином, щоб вона повертала один проміс,\n//*  який виконується або відхиляється через delay часу.Значенням промісу повинен бути об'єкт,\n//*  в якому будуть властивості position і delay зі значеннями однойменних параметрів.\n//*  Використовуй початковий код функції для вибору того, що потрібно зробити з промісом\n//*  - виконати або відхилити.\n//*\n//*===========================================================================================\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n// Notiflix.Notify.failure('Qui timide rogat docet negare');\n// Notiflix.Notify.info('Cogito ergo sum');\n\n// Change value of isSuccess variable to call resolve or reject\n// Change value of isSuccess variable to call resolve or reject\n"],"names":["parcelRequire","document","querySelector"],"version":3,"file":"03-promises.cf00c070.js.map"}